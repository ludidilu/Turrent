// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MainProto.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from MainProto.proto</summary>
public static partial class MainProtoReflection {

  #region Descriptor
  /// <summary>File descriptor for MainProto.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static MainProtoReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "Cg9NYWluUHJvdG8ucHJvdG8iHAoMTG9naW5NZXNzYWdlEgwKBE5hbWUYASAB",
          "KAkiOwoSUGxheWVyU3RhdGVNZXNzYWdlEiUKC1BsYXllclN0YXRlGAEgASgO",
          "MhAuUGxheWVyU3RhdGVFbnVtImUKGkJhdHRsZU1hbmFnZXJBY3Rpb25NZXNz",
          "YWdlEjUKE0JhdHRsZU1hbmFnZXJBY3Rpb24YASABKA4yGC5CYXR0bGVNYW5h",
          "Z2VyQWN0aW9uRW51bRIQCghCYXR0bGVJZBgCIAEoBSo2Cg9QbGF5ZXJTdGF0",
          "ZUVudW0SCAoERnJlZRAAEg0KCVNlYXJjaGluZxABEgoKBkJhdHRsZRACKkAK",
          "F0JhdHRsZU1hbmFnZXJBY3Rpb25FbnVtEgcKA1B2cBAAEgcKA1B2ZRABEhMK",
          "D0NhbmNlbFNlYXJjaGluZxACYgZwcm90bzM="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(new[] {typeof(global::PlayerStateEnum), typeof(global::BattleManagerActionEnum), }, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::LoginMessage), global::LoginMessage.Parser, new[]{ "Name" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::PlayerStateMessage), global::PlayerStateMessage.Parser, new[]{ "PlayerState" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::BattleManagerActionMessage), global::BattleManagerActionMessage.Parser, new[]{ "BattleManagerAction", "BattleId" }, null, null, null)
        }));
  }
  #endregion

}
#region Enums
public enum PlayerStateEnum {
  [pbr::OriginalName("Free")] Free = 0,
  [pbr::OriginalName("Searching")] Searching = 1,
  [pbr::OriginalName("Battle")] Battle = 2,
}

public enum BattleManagerActionEnum {
  [pbr::OriginalName("Pvp")] Pvp = 0,
  [pbr::OriginalName("Pve")] Pve = 1,
  [pbr::OriginalName("CancelSearching")] CancelSearching = 2,
}

#endregion

#region Messages
public sealed partial class LoginMessage : pb::IMessage<LoginMessage> {
  private static readonly pb::MessageParser<LoginMessage> _parser = new pb::MessageParser<LoginMessage>(() => new LoginMessage());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<LoginMessage> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::MainProtoReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public LoginMessage() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public LoginMessage(LoginMessage other) : this() {
    name_ = other.name_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public LoginMessage Clone() {
    return new LoginMessage(this);
  }

  /// <summary>Field number for the "Name" field.</summary>
  public const int NameFieldNumber = 1;
  private string name_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Name {
    get { return name_; }
    set {
      name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as LoginMessage);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(LoginMessage other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Name != other.Name) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Name.Length != 0) hash ^= Name.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Name.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Name);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Name.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(LoginMessage other) {
    if (other == null) {
      return;
    }
    if (other.Name.Length != 0) {
      Name = other.Name;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          Name = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class PlayerStateMessage : pb::IMessage<PlayerStateMessage> {
  private static readonly pb::MessageParser<PlayerStateMessage> _parser = new pb::MessageParser<PlayerStateMessage>(() => new PlayerStateMessage());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<PlayerStateMessage> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::MainProtoReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PlayerStateMessage() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PlayerStateMessage(PlayerStateMessage other) : this() {
    playerState_ = other.playerState_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PlayerStateMessage Clone() {
    return new PlayerStateMessage(this);
  }

  /// <summary>Field number for the "PlayerState" field.</summary>
  public const int PlayerStateFieldNumber = 1;
  private global::PlayerStateEnum playerState_ = 0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::PlayerStateEnum PlayerState {
    get { return playerState_; }
    set {
      playerState_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as PlayerStateMessage);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(PlayerStateMessage other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (PlayerState != other.PlayerState) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (PlayerState != 0) hash ^= PlayerState.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (PlayerState != 0) {
      output.WriteRawTag(8);
      output.WriteEnum((int) PlayerState);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (PlayerState != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PlayerState);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(PlayerStateMessage other) {
    if (other == null) {
      return;
    }
    if (other.PlayerState != 0) {
      PlayerState = other.PlayerState;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          playerState_ = (global::PlayerStateEnum) input.ReadEnum();
          break;
        }
      }
    }
  }

}

public sealed partial class BattleManagerActionMessage : pb::IMessage<BattleManagerActionMessage> {
  private static readonly pb::MessageParser<BattleManagerActionMessage> _parser = new pb::MessageParser<BattleManagerActionMessage>(() => new BattleManagerActionMessage());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<BattleManagerActionMessage> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::MainProtoReflection.Descriptor.MessageTypes[2]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public BattleManagerActionMessage() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public BattleManagerActionMessage(BattleManagerActionMessage other) : this() {
    battleManagerAction_ = other.battleManagerAction_;
    battleId_ = other.battleId_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public BattleManagerActionMessage Clone() {
    return new BattleManagerActionMessage(this);
  }

  /// <summary>Field number for the "BattleManagerAction" field.</summary>
  public const int BattleManagerActionFieldNumber = 1;
  private global::BattleManagerActionEnum battleManagerAction_ = 0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::BattleManagerActionEnum BattleManagerAction {
    get { return battleManagerAction_; }
    set {
      battleManagerAction_ = value;
    }
  }

  /// <summary>Field number for the "BattleId" field.</summary>
  public const int BattleIdFieldNumber = 2;
  private int battleId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int BattleId {
    get { return battleId_; }
    set {
      battleId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as BattleManagerActionMessage);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(BattleManagerActionMessage other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (BattleManagerAction != other.BattleManagerAction) return false;
    if (BattleId != other.BattleId) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (BattleManagerAction != 0) hash ^= BattleManagerAction.GetHashCode();
    if (BattleId != 0) hash ^= BattleId.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (BattleManagerAction != 0) {
      output.WriteRawTag(8);
      output.WriteEnum((int) BattleManagerAction);
    }
    if (BattleId != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(BattleId);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (BattleManagerAction != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) BattleManagerAction);
    }
    if (BattleId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(BattleId);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(BattleManagerActionMessage other) {
    if (other == null) {
      return;
    }
    if (other.BattleManagerAction != 0) {
      BattleManagerAction = other.BattleManagerAction;
    }
    if (other.BattleId != 0) {
      BattleId = other.BattleId;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          battleManagerAction_ = (global::BattleManagerActionEnum) input.ReadEnum();
          break;
        }
        case 16: {
          BattleId = input.ReadInt32();
          break;
        }
      }
    }
  }

}

#endregion


#endregion Designer generated code
